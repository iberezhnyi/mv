{"version":3,"file":"useIsMobile-D8DOO9bD.js","sources":["../../src/hooks/useIsMobile.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { global } from 'styles'\n\nexport const useIsMobile = (maxWidth: string = global.breakpoint.maxTablet): boolean => {\n  const [isMobile, setIsMobile] = useState<boolean>(\n    window.matchMedia(`(max-width: ${maxWidth})`).matches\n  )\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.matchMedia(`(max-width: ${maxWidth})`).matches)\n      console.log('handleResize')\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [maxWidth])\n\n  return isMobile\n}\n"],"names":["useIsMobile","maxWidth","global","isMobile","setIsMobile","useState","useEffect","handleResize"],"mappings":"+CAGO,MAAMA,EAAc,CAACC,EAAmBC,EAAO,WAAW,YAAuB,CAChF,KAAA,CAACC,EAAUC,CAAW,EAAIC,EAAA,SAC9B,OAAO,WAAW,eAAeJ,CAAQ,GAAG,EAAE,OAAA,EAGhDK,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAe,IAAM,CACzBH,EAAY,OAAO,WAAW,eAAeH,CAAQ,GAAG,EAAE,OAAO,EACjE,QAAQ,IAAI,cAAc,CAAA,EAGrB,cAAA,iBAAiB,SAAUM,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAAA,EAC7D,CAACN,CAAQ,CAAC,EAENE,CACT"}